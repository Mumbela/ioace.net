name: Ruby ioace.com for GitHub Actions
# This workflow is for running CI tests on GitHub Actions.
# It runs on every push to the main branch and on pull requests.
# It includes the following jobs:
# - make_executable: Makes the bin files executable.
# - scan_ruby: Scans for common Rails security vulnerabilities using static analysis.
# - scan_js: Scans for security vulnerabilities in JavaScript dependencies.
# - lint: Lints code for consistent style.
# - test: Runs the test suite and keeps screenshots from failed system tests.
# The workflow uses the latest version of Ubuntu as the runner.
# It also sets up a PostgreSQL service for the test job.

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  make_executable:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make bin files executable
        run: |
          chmod +x bin/brakeman
          chmod +x bin/bundle
          chmod +x bin/dev
          chmod +x bin/docker-entrypoint
          chmod +x bin/importmap
          chmod +x bin/jobs
          chmod +x bin/kamal
          chmod +x bin/rails
          chmod +x bin/rake
          chmod +x bin/rubocop
          chmod +x bin/setup
          chmod +x bin/thrust

  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=5

      # redis:
      #   image: redis
      #   ports:
      #     - 6379:6379
      #   options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libpq-dev libyaml-dev pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      
      - name: install-postgresql
        uses: tj-actions/install-postgresql@v3.2.0
        with:
          postgresql-version: 17
    

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          # REDIS_URL: redis://localhost:6379/0
        run: bin/rails db:test:prepare test test:system

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
